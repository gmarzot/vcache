#!/usr/bin/env bash

SOURCE_DIR=$( dirname -- "$0"; )

cd $SOURCE_DIR

if [[ $? != 0 ]]; then
	echo "[$?] unable to cd to source directory..."
	exit 1
fi

DC_VERSION=$(sudo docker-compose version)
if [ $? != 0 ]; then
    echo "please install docker-compose and provide sudo access..."
    exit 1
else
	echo "running docker-compose (>= 1.29 required): ${DC_VERSION}"
fi

sudo docker-compose ps --services --filter "status=running" 2>/dev/null | grep "vcache" > /dev/null

if [ $? == 0 ]; then
	echo "vcache containers already running..."
	exit 1
fi

if [[ -f .env && -r .env ]]; then
	echo "using existing .env file..."
	echo "----- .env ----"
	cat .env
	echo "--------------"
else
	echo "generating .env file..."
	read -p "enter the vcache hostname[$HOSTNAME]: " hostname
	hostname=${hostname:-$HOSTNAME}
    echo "VCACHE_HOSTNAME=${hostname}" > .env
	echo "VCACHE_MEM_SIZE=12G" >> .env
fi

VCACHE_VERSION=`git describe 2> /dev/null`
if [[ $? != 0 ]]; then
	if [[ -r vcache-version.txt ]]; then
		VCACHE_VERSION=`cat vcache-version.txt`
	else
	    echo "[$?]no git revision or version.txt file detected, using: 0.0.0"
	    VCACHE_VERSION="0.0.0"
	fi
fi
echo -n ${VCACHE_VERSION} > vcache-version.txt

echo "cleaning up previous deployment..."
sudo docker-compose down

rm -f run/*.sock run/*.pid

echo "starting vcache (${VCACHE_VERSION}) ..."
sudo docker-compose up -d

if [[ $? != 0 ]]; then
	echo "[$?] an error occured starting vcache, exiting..."
	exit 2
else
	echo "vcache started!"
fi

exit 0
