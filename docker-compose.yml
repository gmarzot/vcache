version: "3"
services:
  vcache_mgmt:
    image: node-red
    build:
      context: ./docker-context/node-red
    container_name: vcache_mgmt
    hostname: ${VCACHE_HOSTNAME}
    volumes:
      - ./mgmt-data:/data
      - var_run:/var/run:rw
    networks:
      - vcache_net
    environment:
      - VCACHE_VERSION=${VCACHE_VERSION}
    # close this for production
    ports:
      - "1880:1880"
    pid: shareable
    restart: always
    depends_on:
      - vcache_redis

  vcache_frontend:
    image: nginx-perl
    build:
      context: ./docker-context/nginx
    container_name: vcache_frontend
    hostname: ${VCACHE_HOSTNAME}
    volumes:
      - var_run:/var/run:rw
      - frontend_log:/var/log/nginx:rw
      - "./etc/nginx/nginx-fe.conf:/etc/nginx/nginx.conf:ro"
      - "./etc/nginx/.htpasswd:/etc/nginx/.htpasswd"
      - "./etc/nginx/pki:/etc/nginx/pki:ro"
      - "./etc/nginx/sites-enabled/frontend.cfg:/etc/nginx/sites-enabled/frontend.cfg"
      - "./etc/nginx/sites-enabled/host-cache.incl:/etc/nginx/sites-enabled/host-cache.incl"
      - "./etc/nginx/modules-enabled/80-mod-http-perl.conf:/etc/nginx/modules-enabled/80-mod-http-perl.conf"
      - "./etc/nginx/modules-enabled/50-mod-http-subs-filter.conf:/etc/nginx/modules-enabled/50-mod-http-subs-filter.conf"
      - "./perllib:/var/lib/nginx/perllib"
    networks:
      - vcache_net
    ports:
      - "443:443"
      - "8443:8443"
    pid: "service:vcache_mgmt"
    ulimits:
       memlock: -1
       nofile:
         soft: 262144
         hard: 262144
    restart: always
    depends_on:
      - vcache_engine
      - vcache_mgmt

  vcache_engine:
    image: varnish
    build:
      context: ./docker-context/varnish
    container_name: vcache_engine
    volumes:
      - "./etc/varnish:/etc/varnish"
      - var_run:/var/run:rw
      - varnish_tmpfs:/var/lib/varnish:rw
    networks:
      - vcache_net
    pid: "service:vcache_mgmt"
    ulimits:
       memlock: -1
       nofile:
         soft: 262144
         hard: 262144
    environment:
      - VARNISH_SIZE=${VCACHE_MEM_SIZE}
    command:
      - "-a /var/run/varnish.sock,HTTP,user=varnish,group=varnish,mode=666"
    restart: always
    depends_on:
      - vcache_backend

  vcache_backend:
    image: nginx-perl
    build:
      context: ./docker-context/nginx
    container_name: vcache_backend
    hostname: ${VCACHE_HOSTNAME}
    volumes:
      - var_run:/var/run:rw
      - backend_log:/var/log/nginx:rw
      - "./etc/nginx/nginx-be.conf:/etc/nginx/nginx.conf:ro"
      - "./etc/nginx/sites-enabled/backend.cfg:/etc/nginx/sites-enabled/backend.cfg"
      - "./etc/nginx/modules-enabled/80-mod-http-perl.conf:/etc/nginx/modules-enabled/80-mod-http-perl.conf"
      - "./perllib:/var/lib/nginx/perllib"
    networks:
      - vcache_net
    pid: "service:vcache_mgmt"
    restart: always

  vcache_stats:
    image: varnish
    build:
      context: ./docker-context/varnish
    container_name: vcache_stats
    volumes:
      - ./etc/varnishstats:/etc/varnish
      - varnish_tmpfs:/var/lib/varnish:ro
    environment:
      VSM_NOPID: 1
    command: "start-varnishstats-exporter"
    networks:
      - vcache_net
    restart: always
    depends_on:
      - vcache_engine
      - vcache_redis

  vcache_redis:
    image: redis:latest
    container_name: vcache_redis
    volumes:
      - redis_data:/data
    networks:
      - vcache_net
    # close this for production
    ports:
      - "6379:6379"
    restart: always

volumes:
  var_run:
    name: vcache_var_run
  frontend_log:
    name: vcache_frontend_log
  backend_log:
    name: vcache_backend_log
  redis_data:
    name: vcache_redis_data
  varnish_tmpfs:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  vcache_net:
    name: vcache_net
    driver: bridge
    enable_ipv6: false
