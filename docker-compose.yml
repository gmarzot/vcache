
services:
  vcache_mgr_agent:
    image: node-red
    build:
      context: ./docker-context/node-red
    container_name: vcache_mgr_agent
    hostname: ${VCACHE_HOSTNAME}
    volumes:
      - ./docker-context/node-red/mgmt-data:/data # comment out for production
      - var_run:/var/run:rw
      - etc_salt:/etc/salt
      - etc_frontend:/etc/nginx-fe
      - etc_varnish:/etc/varnish
      - etc_backend:/etc/nginx-be
    networks:
      - vcache_net
    environment:
      - VCACHE_VERSION=${VCACHE_VERSION}
      - SALT_MASTER=${VCACHE_MGR_ADDR}
    ports:
      - 1881:1880 # comment out for production
    pid: shareable
    restart: always
    depends_on:
      - vcache_redis

  vcache_frontend:
    image: nginx-perl
    build:
      context: ./docker-context/nginx
      args:
        - SERVICE_ROLE=frontend
    container_name: vcache_frontend
    hostname: ${VCACHE_HOSTNAME}
    volumes:
      - var_run:/var/run:rw
      - frontend_log:/var/log/nginx:rw
      - etc_frontend:/etc/nginx-fe
    networks:
      - vcache_net
    ports:
      - 443:443
      - 8443:8443
    pid: service:vcache_mgr_agent
    ulimits:
       memlock: -1
       nofile:
         soft: 262144
         hard: 262144
    restart: always
    depends_on:
      - vcache_engine
      - vcache_mgr_agent
      
  vcache_engine:
    image: varnish
    build:
      context: ./docker-context/varnish
    container_name: vcache_engine
    volumes:
      - var_run:/var/run:rw
      - etc_varnish:/etc/varnish
      - varnish_tmpfs:/var/lib/varnish:exec
    networks:
      - vcache_net
    pid: service:vcache_mgr_agent
    ulimits:
       memlock: -1
       nofile:
         soft: 262144
         hard: 262144
    environment:
      - VARNISH_SIZE=${VCACHE_MEM_SIZE}
    command:
      - "-a /var/run/varnish.sock,HTTP"
    restart: always
    depends_on:
      - vcache_backend

  vcache_backend:
    image: nginx-perl
    build:
      context: ./docker-context/nginx
      args:
        - SERVICE_ROLE=backend
    container_name: vcache_backend
    hostname: ${VCACHE_HOSTNAME}
    volumes:
      - var_run:/var/run:rw
      - backend_log:/var/log/nginx:rw
      - etc_backend:/etc/nginx
    networks:
      - vcache_net
    pid: service:vcache_mgr_agent
    restart: always

  vcache_stats:
    image: varnish
    build:
      context: ./docker-context/varnish
    container_name: vcache_stats
    volumes:
      - varnish_tmpfs:/var/lib/varnish:ro
    environment:
      VSM_NOPID: 1
    command: start-varnishstats-exporter
    networks:
      - vcache_net
    restart: always
    depends_on:
      - vcache_engine
      - vcache_redis

  vcache_redis:
    image: redis:latest
    container_name: vcache_redis
    volumes:
      - redis_data:/data
    networks:
      - vcache_net
    # close this for production
    ports:
      - 6379:6379
    restart: always

volumes:
  var_run:
    name: vcache_var_run
  etc_frontend:
    name: vcache_etc_frontend
  frontend_log:
    name: vcache_frontend_log
  etc_varnish:
    name: vcache_varnish_etc
  etc_backend:
    name: vcache_backend_etc
  backend_log:
    name: vcache_backend_log
  redis_data:
    name: vcache_redis_data
  varnish_tmpfs:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  vcache_net:
    name: vcache_net
    driver: bridge
    enable_ipv6: false
