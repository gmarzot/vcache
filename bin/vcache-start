#!/usr/bin/env bash

usage() {
    echo "Usage: $0 [-d|--debug] [-h|--help]"
    echo "Options:"
    echo "  -d, --debug  Enable debug mode - no detach, compose output to stdout "
    echo "  -h, --help   Show this help message"
}

options=$(getopt -l "help,debug" -o "hd" -n "$0" -- "$@")

if [ $? -ne 0 ]; then
    usage
    exit 1
fi

eval set -- "$options"
while true
do
    case "$1" in
        -d|--debug )
            debug=true
            ;;
        -h|--help )
            usage
            exit 0
            ;;
        -- )
            shift
            break
            ;;
        * )
            usage
            exit 1
            ;;
    esac
done

SOURCE_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && cd .. && pwd )

cd $SOURCE_DIR

if [[ $? != 0 ]]; then
	echo "[$?] unable to cd to source directory..."
	exit 1
fi

if [ "$EUID" -eq 0 ]; then
    SUDO=
else
    SUDO="sudo -E"
fi

DC_VERSION=$($SUDO docker-compose version | head -n 1 | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
if [ $? != 0 ]; then
    echo "please install docker-compose and provide sudo access..."
    exit 2
else
	echo "running docker-compose: ${DC_VERSION} (>= 1.29 required)"
fi

$SUDO docker-compose ps --services --filter "status=running" 2>/dev/null | grep "vcache_mgr_agent" > /dev/null

if [ $? == 0 ]; then
	echo "vcache containers already running: exiting..."
	exit 3
fi

VCACHE_VERSION=`git describe 2> /dev/null`
if [[ $? != 0 ]]; then
	if [[ -r .version ]]; then
		VCACHE_VERSION=`cat .version`
	else
	    echo "unable to determine vcache version: using 0.0.0"
	    VCACHE_VERSION="0.0.0"
	fi
fi
export VCACHE_VERSION

if [[ -f .env && -r .env ]]; then
	echo "using existing .env file..."
	echo "----- .env ----"
	cat .env
	echo "--------------"
else
	echo "generating .env file..."
	read -p "enter the vcache hostname[$HOSTNAME]: " hostname
	hostname=${hostname:-$HOSTNAME}
    echo "VCACHE_HOSTNAME=${hostname}" > .env
	echo "VCACHE_MEM_SIZE=4G" >> .env
fi

if [[ "$VCACHE_VERSION" != "0.0.0" ]]; then
	# update or add the VCACHE_VERSION to .env
    # XXX Rocky does not have perl?? that won't work for us
    #	perl -i -ne "\$found++ if s/VCACHE_VERSION=\S+/VCACHE_VERSION=${VCACHE_VERSION}/; \$_ .= \"VCACHE_VERSION=${VCACHE_VERSION}\\n\" if eof and not \$found; print;" .env
    sed -i "/^VCACHE_VERSION=/{h;s/=.*/=${VCACHE_VERSION}/};\${x;/^\$/{s//VCACHE_VERSION=${VCACHE_VERSION}/;H};x}" .env
fi

echo "cleaning up previous deployment..."
$SUDO docker-compose down

echo "starting vcache (${VCACHE_VERSION}) ..."

if [[ $debug ]]; then
	$SUDO docker-compose up
    if [[ $? != 0 ]]; then
        echo "an error occured starting vcache ($?) (debug), exiting..."
        exit 5
    fi
    exit 0
else
	$SUDO docker-compose up -d
    if [[ $? != 0 ]]; then
	    echo "an error occured starting vcache ($?), exiting..."
	    exit 4
    else
        echo "vcache started!"
    fi
fi

exit 0
